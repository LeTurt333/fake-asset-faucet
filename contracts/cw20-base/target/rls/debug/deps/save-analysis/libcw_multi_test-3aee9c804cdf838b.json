{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1","program":"/home/turtle/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cw_multi_test","--edition=2018","/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"iterator\"","--cfg","feature=\"staking\"","-C","metadata=3aee9c804cdf838b","-C","extra-filename=-3aee9c804cdf838b","--out-dir","/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps","-L","dependency=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps","--extern","anyhow=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libanyhow-ebdd68e2b6c54e52.rmeta","--extern","cosmwasm_std=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libcosmwasm_std-7dc49ace3c88f755.rmeta","--extern","cosmwasm_storage=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libcosmwasm_storage-95c73d554c0f7fea.rmeta","--extern","cw_storage_plus=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libcw_storage_plus-970f68927da564b9.rmeta","--extern","cw_utils=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libcw_utils-6368d9fc3133855a.rmeta","--extern","derivative=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libderivative-cf1da13b28d80e4c.so","--extern","itertools=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libitertools-e80fa854a483a313.rmeta","--extern","prost=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libprost-56cd36ff725c003a.rmeta","--extern","schemars=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libschemars-b1fd1db1c6c49eb2.rmeta","--extern","serde=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libserde-7d46a467cbb4215e.rmeta","--extern","thiserror=/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libthiserror-94ff2c811cce9be7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/turtle/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/turtle/fake_asset_faucet/contracts/cw20-base/target/rls/debug/deps/libcw_multi_test-3aee9c804cdf838b.rmeta"},"prelude":{"crate_id":{"name":"cw_multi_test","disambiguator":[18063720459095095768,0]},"crate_root":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src","external_crates":[{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3488764316664526318,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","num":2,"id":{"name":"core","disambiguator":[8055937789589085173,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[9266852701449989672,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[3150474620658042907,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7885665867006586706,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12703856752884015026,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2969720598907790989,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[2619625876091296344,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[12464395834502290914,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6756473508419496664,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15198303206847108385,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[2772378233732002785,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[12984264205291464654,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17906896803061581552,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[6255416831383744366,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[17027395046702333165,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[17940528507109169175,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[16282955217049922585,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[15640776750749541284,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":20,"id":{"name":"anyhow","disambiguator":[444321199609660433,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":21,"id":{"name":"cosmwasm_std","disambiguator":[14236594306784594781,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":22,"id":{"name":"schemars","disambiguator":[8474686280795391473,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":23,"id":{"name":"schemars_derive","disambiguator":[17308298478272094777,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":24,"id":{"name":"serde_json","disambiguator":[9129702050307105037,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","num":25,"id":{"name":"serde","disambiguator":[824305381868174268,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","num":26,"id":{"name":"serde_derive","disambiguator":[3598524168949189907,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":27,"id":{"name":"itoa","disambiguator":[4744432788679605432,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":28,"id":{"name":"ryu","disambiguator":[13272564402323909184,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":29,"id":{"name":"dyn_clone","disambiguator":[18438843675720519334,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":30,"id":{"name":"cosmwasm_crypto","disambiguator":[14922299028244261028,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":31,"id":{"name":"ed25519_zebra","disambiguator":[8975931495085680302,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":32,"id":{"name":"curve25519_dalek","disambiguator":[6025509857938692208,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":33,"id":{"name":"byteorder","disambiguator":[1317338499916352615,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":34,"id":{"name":"digest","disambiguator":[2344585940975527407,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":35,"id":{"name":"generic_array","disambiguator":[13143185818654299955,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":36,"id":{"name":"typenum","disambiguator":[1684001055960365863,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":37,"id":{"name":"rand_core","disambiguator":[8594395224349422731,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":38,"id":{"name":"getrandom","disambiguator":[10490376007579171599,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":39,"id":{"name":"cfg_if","disambiguator":[8027478366546687506,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":40,"id":{"name":"libc","disambiguator":[2745473335662636762,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":41,"id":{"name":"zeroize","disambiguator":[14908103604938018053,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":42,"id":{"name":"subtle","disambiguator":[11374537631354390196,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":43,"id":{"name":"rand_core","disambiguator":[10696095828523082231,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":44,"id":{"name":"getrandom","disambiguator":[14811531483943133974,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":45,"id":{"name":"sha2","disambiguator":[18087071533681887963,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":46,"id":{"name":"block_buffer","disambiguator":[8608448586100531722,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":47,"id":{"name":"opaque_debug","disambiguator":[3123338400136960121,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":48,"id":{"name":"cpufeatures","disambiguator":[364794068510456234,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","num":49,"id":{"name":"thiserror","disambiguator":[16366075916537494496,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":50,"id":{"name":"thiserror_impl","disambiguator":[777297237178620108,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":51,"id":{"name":"hex","disambiguator":[1025244451999503072,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":52,"id":{"name":"digest","disambiguator":[17483126949393744080,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":53,"id":{"name":"crypto_common","disambiguator":[12735002056619446014,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":54,"id":{"name":"block_buffer","disambiguator":[3629285001286207310,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":55,"id":{"name":"k256","disambiguator":[5096217696178625872,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":56,"id":{"name":"elliptic_curve","disambiguator":[12412017430357572878,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":57,"id":{"name":"crypto_bigint","disambiguator":[9932075237898122376,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":58,"id":{"name":"group","disambiguator":[10312839004893683960,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":59,"id":{"name":"ff","disambiguator":[13616822603003369995,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":60,"id":{"name":"sec1","disambiguator":[6304097098927848057,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":61,"id":{"name":"base16ct","disambiguator":[8454818607884618653,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":62,"id":{"name":"der","disambiguator":[7173639707759562287,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":63,"id":{"name":"const_oid","disambiguator":[8483744770221511587,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":64,"id":{"name":"pkcs8","disambiguator":[4076055683539264791,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":65,"id":{"name":"spki","disambiguator":[12510668002441717760,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":66,"id":{"name":"ecdsa","disambiguator":[3205171752162813730,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":67,"id":{"name":"signature","disambiguator":[9040108903412562004,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":68,"id":{"name":"rfc6979","disambiguator":[10266971470767048403,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":69,"id":{"name":"hmac","disambiguator":[11382411720931235711,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":70,"id":{"name":"sha2","disambiguator":[17552030320879078812,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":71,"id":{"name":"forward_ref","disambiguator":[12557450797404519440,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","num":72,"id":{"name":"derivative","disambiguator":[13511057912003062787,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":73,"id":{"name":"cosmwasm_derive","disambiguator":[11794830096772262866,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":74,"id":{"name":"uint","disambiguator":[18416791182040077854,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":75,"id":{"name":"static_assertions","disambiguator":[8132521657325139995,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":76,"id":{"name":"crunchy","disambiguator":[6622353517055362483,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":77,"id":{"name":"base64","disambiguator":[16760821550569399237,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","num":78,"id":{"name":"serde_json_wasm","disambiguator":[14268225840738824151,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":79,"id":{"name":"itertools","disambiguator":[13757093687482878250,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":80,"id":{"name":"either","disambiguator":[8790145548394806088,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":81,"id":{"name":"cosmwasm_storage","disambiguator":[9758946082623554892,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":82,"id":{"name":"cw_storage_plus","disambiguator":[6485048365493321395,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":83,"id":{"name":"cw_utils","disambiguator":[16249670904532799686,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":84,"id":{"name":"cosmwasm_schema","disambiguator":[13086756551666009209,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":85,"id":{"name":"cosmwasm_schema_derive","disambiguator":[6007262288626098541,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":86,"id":{"name":"cw2","disambiguator":[5204775828592733674,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","num":87,"id":{"name":"semver","disambiguator":[4947075525840285374,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","num":88,"id":{"name":"prost","disambiguator":[12630425671004873,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","num":89,"id":{"name":"prost_derive","disambiguator":[14029852973481815713,0]}},{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","num":90,"id":{"name":"bytes","disambiguator":[5482412901945755247,0]}}],"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":0,"byte_end":1140,"line_start":1,"line_end":31,"column_start":1,"column_end":51}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":695,"byte_end":705,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"alias_span":null,"name":"custom_app","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":707,"byte_end":717,"line_start":23,"line_end":23,"column_start":17,"column_end":27},"alias_span":null,"name":"next_block","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":719,"byte_end":722,"line_start":23,"line_end":23,"column_start":29,"column_end":32},"alias_span":null,"name":"App","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":724,"byte_end":734,"line_start":23,"line_end":23,"column_start":34,"column_end":44},"alias_span":null,"name":"AppBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":736,"byte_end":744,"line_start":23,"line_end":23,"column_start":46,"column_end":54},"alias_span":null,"name":"BasicApp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":746,"byte_end":761,"line_start":23,"line_end":23,"column_start":56,"column_end":71},"alias_span":null,"name":"BasicAppBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":763,"byte_end":775,"line_start":23,"line_end":23,"column_start":73,"column_end":85},"alias_span":null,"name":"CosmosRouter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":304},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":777,"byte_end":783,"line_start":23,"line_end":23,"column_start":87,"column_end":93},"alias_span":null,"name":"Router","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":789,"byte_end":796,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"SudoMsg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":823,"byte_end":827,"line_start":26,"line_end":26,"column_start":23,"column_end":27},"alias_span":null,"name":"Bank","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1478},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":829,"byte_end":839,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"alias_span":null,"name":"BankKeeper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1459},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":841,"byte_end":849,"line_start":26,"line_end":26,"column_start":41,"column_end":49},"alias_span":null,"name":"BankSudo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":879,"byte_end":887,"line_start":27,"line_end":27,"column_start":28,"column_end":36},"alias_span":null,"name":"Contract","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":889,"byte_end":904,"line_start":27,"line_end":27,"column_start":38,"column_end":53},"alias_span":null,"name":"ContractWrapper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1559},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":933,"byte_end":944,"line_start":28,"line_end":28,"column_start":27,"column_end":38},"alias_span":null,"name":"AppResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":896},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":946,"byte_end":954,"line_start":28,"line_end":28,"column_start":40,"column_end":48},"alias_span":null,"name":"Executor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":964},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":981,"byte_end":994,"line_start":29,"line_end":29,"column_start":25,"column_end":38},"alias_span":null,"name":"FailingModule","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":953},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":996,"byte_end":1002,"line_start":29,"line_end":29,"column_start":40,"column_end":46},"alias_span":null,"name":"Module","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1024},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":1030,"byte_end":1049,"line_start":30,"line_end":30,"column_start":26,"column_end":45},"alias_span":null,"name":"FailingDistribution","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":1051,"byte_end":1065,"line_start":30,"line_end":30,"column_start":47,"column_end":61},"alias_span":null,"name":"FailingStaking","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1020},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":1067,"byte_end":1074,"line_start":30,"line_end":30,"column_start":63,"column_end":70},"alias_span":null,"name":"Staking","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1568},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":1076,"byte_end":1087,"line_start":30,"line_end":30,"column_start":72,"column_end":83},"alias_span":null,"name":"StakingSudo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1298},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":1112,"byte_end":1116,"line_start":31,"line_end":31,"column_start":23,"column_end":27},"alias_span":null,"name":"Wasm","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1304},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":1118,"byte_end":1128,"line_start":31,"line_end":31,"column_start":29,"column_end":39},"alias_span":null,"name":"WasmKeeper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1587},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":1130,"byte_end":1138,"line_start":31,"line_end":31,"column_start":41,"column_end":49},"alias_span":null,"name":"WasmSudo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":0,"byte_end":1140,"line_start":1,"line_end":31,"column_start":1,"column_end":51},"name":"","qualname":"::","value":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":396},{"krate":0,"index":504},{"krate":0,"index":736},{"krate":0,"index":817},{"krate":0,"index":837},{"krate":0,"index":908},{"krate":0,"index":994},{"krate":0,"index":1026},{"krate":0,"index":1124},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456}],"decl_id":null,"docs":" Multitest is a design to simulate a blockchain environment in pure Rust.\n This allows us to run unit tests that involve contract -> contract,\n and contract -> bank interactions. This is not intended to be a full blockchain app\n but to simulate the Cosmos SDK x/wasm module close enough to gain confidence in\n multi-contract deployements before testing them on a live blockchain.","sig":null,"attributes":[{"value":"/ Multitest is a design to simulate a blockchain environment in pure Rust.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ This allows us to run unit tests that involve contract -> contract,","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":77,"byte_end":148,"line_start":2,"line_end":2,"column_start":1,"column_end":72}},{"value":"/ and contract -> bank interactions. This is not intended to be a full blockchain app","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":149,"byte_end":236,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ but to simulate the Cosmos SDK x/wasm module close enough to gain confidence in","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":237,"byte_end":320,"line_start":4,"line_end":4,"column_start":1,"column_end":84}},{"value":"/ multi-contract deployements before testing them on a live blockchain.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":321,"byte_end":394,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":395,"byte_end":398,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To understand the design of this module, please refer to `../DESIGN.md`","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":399,"byte_end":474,"line_start":7,"line_end":7,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":153},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":2002,"byte_end":2012,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"next_block","qualname":"::app::next_block","value":"fn next_block<'_>(&'_ mut BlockInfo)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":154},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":2205,"byte_end":2213,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"name":"BasicApp","qualname":"::app::BasicApp","value":"App<BankKeeper, MockApi, MockStorage, FailingModule<ExecC, QueryC, Empty>,\nWasmKeeper<ExecC, QueryC>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for default build `App` to make its storing simpler in typical scenario\n","sig":null,"attributes":[{"value":"/ Type alias for default build `App` to make its storing simpler in typical scenario","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":2109,"byte_end":2195,"line_start":29,"line_end":29,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":2630,"byte_end":2633,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"App","qualname":"::app::App","value":"App {  }","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"decl_id":null,"docs":" Router is a persisted state. You can query this.\n Execution generally happens on the RouterCache, which then can be atomically committed or rolled back.\n We offer .execute() as a wrapper around cache, execute, commit/rollback process.\n","sig":null,"attributes":[{"value":"/ Router is a persisted state. You can query this.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":2374,"byte_end":2426,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/ Execution generally happens on the RouterCache, which then can be atomically committed or rolled back.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":2427,"byte_end":2533,"line_start":39,"line_end":39,"column_start":1,"column_end":107}},{"value":"/ We offer .execute() as a wrapper around cache, execute, commit/rollback process.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":2534,"byte_end":2618,"line_start":40,"line_end":40,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3172,"byte_end":3179,"line_start":64,"line_end":64,"column_start":8,"column_end":15},"name":"default","qualname":"<BasicApp as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3340,"byte_end":3343,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<BasicApp>::new","value":"fn new<F>(F) -> Self where\nF: for<'_, '_,\n'_> FnOnce(&'_ mut Router<BankKeeper, FailingModule<Empty, Empty, Empty>,\nWasmKeeper<Empty, Empty>, FailingStaking, FailingDistribution>, &'_ dyn Api,\n&'_ mut dyn Storage) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates new default `App` implementation working with Empty custom messages.\n","sig":null,"attributes":[{"value":"/ Creates new default `App` implementation working with Empty custom messages.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3248,"byte_end":3328,"line_start":70,"line_end":70,"column_start":5,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3912,"byte_end":3922,"line_start":91,"line_end":91,"column_start":8,"column_end":18},"name":"custom_app","qualname":"::app::custom_app","value":"fn custom_app<ExecC, QueryC, F>(F) -> BasicApp<ExecC, QueryC> where\nExecC: Debug + Clone + PartialEq + JsonSchema + DeserializeOwned + 'static,\nQueryC: Debug + CustomQuery + DeserializeOwned + 'static,\nF: for<'_, '_,\n'_> FnOnce(&'_ mut Router<BankKeeper, FailingModule<ExecC, QueryC, Empty>,\nWasmKeeper<ExecC, QueryC>, FailingStaking, FailingDistribution>, &'_ dyn Api,\n&'_ mut dyn Storage) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Creates new default `App` implementation working with customized exec and query messages.\n Outside of `App` implementation to make type elision better.\n","sig":null,"attributes":[{"value":"/ Creates new default `App` implementation working with customized exec and query messages.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3746,"byte_end":3839,"line_start":89,"line_end":89,"column_start":1,"column_end":94}},{"value":"/ Outside of `App` implementation to make type elision better.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3840,"byte_end":3904,"line_start":90,"line_end":90,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":4934,"byte_end":4943,"line_start":123,"line_end":123,"column_start":8,"column_end":17},"name":"raw_query","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT> as cosmwasm_std::Querier>::raw_query","value":"fn raw_query<'_, '_>(&'_ Self, &'_ [u8]) -> QuerierResult","parent":{"krate":21,"index":2813},"children":[],"decl_id":{"krate":21,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":5618,"byte_end":5625,"line_start":143,"line_end":143,"column_start":8,"column_end":15},"name":"execute","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT> as executor::Executor>::execute","value":"fn execute<'_>(&'_ mut Self, Addr, cosmwasm_std::CosmosMsg<CustomT::ExecT>)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":896},"children":[],"decl_id":{"krate":0,"index":898},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":202},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":6044,"byte_end":6059,"line_start":156,"line_end":156,"column_start":10,"column_end":25},"name":"BasicAppBuilder","qualname":"::app::BasicAppBuilder","value":"AppBuilder<BankKeeper, MockApi, MockStorage,\nFailingModule<ExecC, QueryC, Empty>, WasmKeeper<ExecC, QueryC>,\nFailingStaking, FailingDistribution>","parent":null,"children":[],"decl_id":null,"docs":" This is essential to create a custom app with custom handler.\n   let mut app = BasicAppBuilder::<E, Q>::new_custom().with_custom(handler).build();\n","sig":null,"attributes":[{"value":"/ This is essential to create a custom app with custom handler.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":5881,"byte_end":5946,"line_start":154,"line_end":154,"column_start":1,"column_end":66}},{"value":"/   let mut app = BasicAppBuilder::<E, Q>::new_custom().with_custom(handler).build();","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":5947,"byte_end":6034,"line_start":155,"line_end":155,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":205},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":6359,"byte_end":6369,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"AppBuilder","qualname":"::app::AppBuilder","value":"AppBuilder {  }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"decl_id":null,"docs":" Utility to build App in stages. If particular items wont be set, defaults would be used\n","sig":null,"attributes":[{"value":"/ Utility to build App in stages. If particular items wont be set, defaults would be used","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":6256,"byte_end":6347,"line_start":166,"line_end":166,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":6819,"byte_end":6826,"line_start":189,"line_end":189,"column_start":8,"column_end":15},"name":"default","qualname":"<AppBuilder<BankKeeper, MockApi, MockStorage,\nFailingModule<Empty, Empty, Empty>, WasmKeeper<Empty, Empty>, FailingStaking,\nFailingDistribution> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":7189,"byte_end":7192,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"new","qualname":"<AppBuilder<BankKeeper, MockApi, MockStorage,\nFailingModule<Empty, Empty, Empty>, WasmKeeper<Empty, Empty>, FailingStaking,\nFailingDistribution>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates builder with default components working with empty exec and query messages.\n","sig":null,"attributes":[{"value":"/ Creates builder with default components working with empty exec and query messages.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":7090,"byte_end":7177,"line_start":205,"line_end":205,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8078,"byte_end":8088,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"new_custom","qualname":"<AppBuilder<BankKeeper, MockApi, MockStorage,\nFailingModule<ExecC, QueryC, Empty>, WasmKeeper<ExecC, QueryC>,\nFailingStaking, FailingDistribution>>::new_custom","value":"fn new_custom() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates builder with default components designed to work with custom exec and query\n messages.\n","sig":null,"attributes":[{"value":"/ Creates builder with default components designed to work with custom exec and query","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":7961,"byte_end":8048,"line_start":234,"line_end":234,"column_start":5,"column_end":92}},{"value":"/ messages.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8053,"byte_end":8066,"line_start":235,"line_end":235,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":9181,"byte_end":9190,"line_start":262,"line_end":262,"column_start":12,"column_end":21},"name":"with_wasm","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::with_wasm","value":"fn with_wasm<C, NewWasm>(Self, NewWasm)\n-> AppBuilder<BankT, ApiT, StorageT, CustomT, NewWasm, StakingT, DistrT> where\nC: Module, NewWasm: Wasm<C::ExecT, C::QueryT>","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default wasm executor.","sig":null,"attributes":[{"value":"/ Overwrites default wasm executor.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8610,"byte_end":8647,"line_start":253,"line_end":253,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8652,"byte_end":8655,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ At this point it is needed that new wasm implements some `Wasm` trait, but it doesn't need","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8660,"byte_end":8754,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ to be bound to Bank or Custom yet - as those may change. The cross-components validation is","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8759,"byte_end":8854,"line_start":256,"line_end":256,"column_start":5,"column_end":100}},{"value":"/ done on final building.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8859,"byte_end":8886,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8891,"byte_end":8894,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Also it is possible to completely abandon trait bounding here which would not be bad idea,","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8899,"byte_end":8993,"line_start":259,"line_end":259,"column_start":5,"column_end":99}},{"value":"/ however it might make the message on build creepy in many cases, so as for properly build","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8998,"byte_end":9091,"line_start":260,"line_end":260,"column_start":5,"column_end":98}},{"value":"/ `App` we always want `Wasm` to be `Wasm`, some checks are done early.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":9096,"byte_end":9169,"line_start":261,"line_end":261,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":9809,"byte_end":9818,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"with_bank","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::with_bank","value":"fn with_bank<NewBank>(Self, NewBank)\n-> AppBuilder<NewBank, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT> where\nNewBank: Bank","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default bank interface\n","sig":null,"attributes":[{"value":"/ Overwrites default bank interface","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":9760,"byte_end":9797,"line_start":289,"line_end":289,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":10404,"byte_end":10412,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"with_api","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::with_api","value":"fn with_api<NewApi>(Self, NewApi)\n-> AppBuilder<BankT, NewApi, StorageT, CustomT, WasmT, StakingT, DistrT> where\nNewApi: Api","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default api interface\n","sig":null,"attributes":[{"value":"/ Overwrites default api interface","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":10356,"byte_end":10392,"line_start":317,"line_end":317,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":10999,"byte_end":11011,"line_start":346,"line_end":346,"column_start":12,"column_end":24},"name":"with_storage","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::with_storage","value":"fn with_storage<NewStorage>(Self, NewStorage)\n-> AppBuilder<BankT, ApiT, NewStorage, CustomT, WasmT, StakingT, DistrT> where\nNewStorage: Storage","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default storage interface\n","sig":null,"attributes":[{"value":"/ Overwrites default storage interface","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":10947,"byte_end":10987,"line_start":345,"line_end":345,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":12143,"byte_end":12154,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"with_custom","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::with_custom","value":"fn with_custom<NewCustom>(Self, NewCustom)\n-> AppBuilder<BankT, ApiT, StorageT, NewCustom, WasmT, StakingT, DistrT> where\nNewCustom: Module","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default custom messages handler","sig":null,"attributes":[{"value":"/ Overwrites default custom messages handler","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":11558,"byte_end":11604,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":11609,"byte_end":11612,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ At this point it is needed that new custom implements some `Module` trait, but it doesn't need","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":11617,"byte_end":11715,"line_start":375,"line_end":375,"column_start":5,"column_end":103}},{"value":"/ to be bound to ExecC or QueryC yet - as those may change. The cross-components validation is","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":11720,"byte_end":11816,"line_start":376,"line_end":376,"column_start":5,"column_end":101}},{"value":"/ done on final building.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":11821,"byte_end":11848,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":11853,"byte_end":11856,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Also it is possible to completely abandon trait bounding here which would not be bad idea,","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":11861,"byte_end":11955,"line_start":379,"line_end":379,"column_start":5,"column_end":99}},{"value":"/ however it might make the message on build creepy in many cases, so as for properly build","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":11960,"byte_end":12053,"line_start":380,"line_end":380,"column_start":5,"column_end":98}},{"value":"/ `App` we always want `Wasm` to be `Wasm`, some checks are done early.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":12058,"byte_end":12131,"line_start":381,"line_end":381,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":12747,"byte_end":12759,"line_start":410,"line_end":410,"column_start":12,"column_end":24},"name":"with_staking","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::with_staking","value":"fn with_staking<NewStaking>(Self, NewStaking)\n-> AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, NewStaking, DistrT> where\nNewStaking: Staking","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default bank interface\n","sig":null,"attributes":[{"value":"/ Overwrites default bank interface","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":12698,"byte_end":12735,"line_start":409,"line_end":409,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":13355,"byte_end":13372,"line_start":438,"line_end":438,"column_start":12,"column_end":29},"name":"with_distribution","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::with_distribution","value":"fn with_distribution<NewDistribution>(Self, NewDistribution)\n->\n    AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT,\n    NewDistribution> where NewDistribution: Distribution","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default bank interface\n","sig":null,"attributes":[{"value":"/ Overwrites default bank interface","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":13306,"byte_end":13343,"line_start":437,"line_end":437,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":13989,"byte_end":13999,"line_start":466,"line_end":466,"column_start":12,"column_end":22},"name":"with_block","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::with_block","value":"fn with_block(Self, BlockInfo) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overwrites default initial block\n","sig":null,"attributes":[{"value":"/ Overwrites default initial block","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":13941,"byte_end":13977,"line_start":465,"line_end":465,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":14339,"byte_end":14344,"line_start":474,"line_end":474,"column_start":12,"column_end":17},"name":"build","qualname":"<AppBuilder<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::build","value":"fn build<F>(Self, F)\n-> App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT> where\nBankT: Bank, ApiT: Api, StorageT: Storage, CustomT: Module,\nWasmT: Wasm<CustomT::ExecT, CustomT::QueryT>, StakingT: Staking,\nDistrT: Distribution,\nF: for<'_, '_,\n'_> FnOnce(&'_ mut Router<BankT, CustomT, WasmT, StakingT, DistrT>,\n&'_ dyn Api, &'_ mut dyn Storage) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Builds final `App`. At this point all components type have to be properly related to each\n other. If there are some generics related compilation error make sure, that all components\n are properly relating to each other.\n","sig":null,"attributes":[{"value":"/ Builds final `App`. At this point all components type have to be properly related to each","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":14090,"byte_end":14183,"line_start":471,"line_end":471,"column_start":5,"column_end":98}},{"value":"/ other. If there are some generics related compilation error make sure, that all components","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":14188,"byte_end":14282,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ are properly relating to each other.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":14287,"byte_end":14327,"line_start":473,"line_end":473,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":15515,"byte_end":15527,"line_start":518,"line_end":518,"column_start":12,"column_end":24},"name":"init_modules","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::init_modules","value":"fn init_modules<F, T, '_>(&'_ mut Self, F) -> T where\nF: for<'_, '_,\n'_> FnOnce(&'_ mut Router<BankT, CustomT, WasmT, StakingT, DistrT>,\n&'_ dyn Api, &'_ mut dyn Storage) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":15813,"byte_end":15824,"line_start":529,"line_end":529,"column_start":12,"column_end":23},"name":"read_module","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::read_module","value":"fn read_module<F, T, '_>(&'_ Self, F) -> T where\nF: for<'_, '_,\n'_> FnOnce(&'_ Router<BankT, CustomT, WasmT, StakingT, DistrT>, &'_ dyn Api,\n&'_ dyn Storage) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":16850,"byte_end":16860,"line_start":561,"line_end":561,"column_start":12,"column_end":22},"name":"store_code","qualname":"<App<BankT, ApiT, StorageT, CustomT,\nWasmKeeper<CustomT::ExecT, CustomT::QueryT>, StakingT, DistrT>>::store_code","value":"fn store_code<'_>(&'_ mut Self,\nBox<dyn Contract<CustomT::ExecT, CustomT::QueryT>>) -> u64","parent":null,"children":[],"decl_id":null,"docs":" This registers contract code (like uploading wasm bytecode on a chain),\n so it can later be used to instantiate a contract.\n","sig":null,"attributes":[{"value":"/ This registers contract code (like uploading wasm bytecode on a chain),","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":16704,"byte_end":16779,"line_start":559,"line_end":559,"column_start":5,"column_end":80}},{"value":"/ so it can later be used to instantiate a contract.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":16784,"byte_end":16838,"line_start":560,"line_end":560,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":17099,"byte_end":17112,"line_start":566,"line_end":566,"column_start":12,"column_end":25},"name":"contract_data","qualname":"<App<BankT, ApiT, StorageT, CustomT,\nWasmKeeper<CustomT::ExecT, CustomT::QueryT>, StakingT, DistrT>>::contract_data","value":"fn contract_data<'_, '_>(&'_ Self, &'_ Addr) -> AnyResult<ContractData>","parent":null,"children":[],"decl_id":null,"docs":" This allows to get `ContractData` for specific contract\n","sig":null,"attributes":[{"value":"/ This allows to get `ContractData` for specific contract","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":17028,"byte_end":17087,"line_start":565,"line_end":565,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":17352,"byte_end":17365,"line_start":571,"line_end":571,"column_start":12,"column_end":25},"name":"dump_wasm_raw","qualname":"<App<BankT, ApiT, StorageT, CustomT,\nWasmKeeper<CustomT::ExecT, CustomT::QueryT>, StakingT, DistrT>>::dump_wasm_raw","value":"fn dump_wasm_raw<'_, '_>(&'_ Self, &'_ Addr) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" This gets a raw state dump of all key-values held by a given contract\n","sig":null,"attributes":[{"value":"/ This gets a raw state dump of all key-values held by a given contract","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":17267,"byte_end":17340,"line_start":570,"line_end":570,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":17989,"byte_end":17998,"line_start":589,"line_end":589,"column_start":12,"column_end":21},"name":"set_block","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::set_block","value":"fn set_block<'_>(&'_ mut Self, BlockInfo)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18159,"byte_end":18171,"line_start":594,"line_end":594,"column_start":12,"column_end":24},"name":"update_block","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::update_block","value":"fn update_block<F, '_>(&'_ mut Self, F) where F: for<'_> Fn(&'_ mut BlockInfo)\n-> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18319,"byte_end":18329,"line_start":599,"line_end":599,"column_start":12,"column_end":22},"name":"block_info","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::block_info","value":"fn block_info<'_>(&'_ Self) -> BlockInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the current block_info\n","sig":null,"attributes":[{"value":"/ Returns a copy of the current block_info","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18263,"byte_end":18307,"line_start":598,"line_end":598,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18532,"byte_end":18536,"line_start":605,"line_end":605,"column_start":12,"column_end":16},"name":"wrap","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::wrap","value":"fn wrap<'_>(&'_ Self) -> QuerierWrapper","parent":null,"children":[],"decl_id":null,"docs":" Simple helper so we get access to all the QuerierWrapper helpers,\n eg. wrap().query_wasm_smart, query_all_balances, ...\n","sig":null,"attributes":[{"value":"/ Simple helper so we get access to all the QuerierWrapper helpers,","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18390,"byte_end":18459,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ eg. wrap().query_wasm_smart, query_all_balances, ...","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18464,"byte_end":18520,"line_start":604,"line_end":604,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18860,"byte_end":18873,"line_start":612,"line_end":612,"column_start":12,"column_end":25},"name":"execute_multi","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::execute_multi","value":"fn execute_multi<'_>(&'_ mut Self, Addr,\nVec<cosmwasm_std::CosmosMsg<CustomT::ExecT>>) -> AnyResult<Vec<AppResponse>>","parent":null,"children":[],"decl_id":null,"docs":" Runs multiple CosmosMsg in one atomic operation.\n This will create a cache before the execution, so no state changes are persisted if any of them\n return an error. But all writes are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs multiple CosmosMsg in one atomic operation.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18626,"byte_end":18678,"line_start":609,"line_end":609,"column_start":5,"column_end":57}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if any of them","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18683,"byte_end":18782,"line_start":610,"line_end":610,"column_start":5,"column_end":104}},{"value":"/ return an error. But all writes are persisted on success.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":18787,"byte_end":18848,"line_start":611,"line_end":611,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":19794,"byte_end":19803,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"wasm_sudo","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::wasm_sudo","value":"fn wasm_sudo<T, U, '_, '_>(&'_ mut Self, U, &'_ T) -> AnyResult<AppResponse>\nwhere T: Serialize, U: Into<Addr>","parent":null,"children":[],"decl_id":null,"docs":" Call a smart contract in \"sudo\" mode.\n This will create a cache before the execution, so no state changes are persisted if this\n returns an error, but all are persisted on success.\n","sig":null,"attributes":[{"value":"/ Call a smart contract in \"sudo\" mode.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":19584,"byte_end":19625,"line_start":635,"line_end":635,"column_start":5,"column_end":46}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if this","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":19630,"byte_end":19722,"line_start":636,"line_end":636,"column_start":5,"column_end":97}},{"value":"/ returns an error, but all are persisted on success.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":19727,"byte_end":19782,"line_start":637,"line_end":637,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":20480,"byte_end":20484,"line_start":662,"line_end":662,"column_start":12,"column_end":16},"name":"sudo","qualname":"<App<BankT, ApiT, StorageT, CustomT, WasmT, StakingT, DistrT>>::sudo","value":"fn sudo<'_>(&'_ mut Self, SudoMsg) -> AnyResult<AppResponse>","parent":null,"children":[],"decl_id":null,"docs":" Runs arbitrary SudoMsg.\n This will create a cache before the execution, so no state changes are persisted if this\n returns an error, but all are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs arbitrary SudoMsg.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":20284,"byte_end":20311,"line_start":659,"line_end":659,"column_start":5,"column_end":32}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if this","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":20316,"byte_end":20408,"line_start":660,"line_end":660,"column_start":5,"column_end":97}},{"value":"/ returns an error, but all are persisted on success.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":20413,"byte_end":20468,"line_start":661,"line_end":661,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":21024,"byte_end":21030,"line_start":679,"line_end":679,"column_start":12,"column_end":18},"name":"Router","qualname":"::app::Router","value":"Router { bank, custom, staking, distribution }","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":311},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":21367,"byte_end":21371,"line_start":684,"line_end":684,"column_start":9,"column_end":13},"name":"bank","qualname":"::app::Router::bank","value":"Bank","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":312},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":21387,"byte_end":21393,"line_start":685,"line_end":685,"column_start":9,"column_end":15},"name":"custom","qualname":"::app::Router::custom","value":"Custom","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":313},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":21411,"byte_end":21418,"line_start":686,"line_end":686,"column_start":9,"column_end":16},"name":"staking","qualname":"::app::Router::staking","value":"Staking","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":314},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":21437,"byte_end":21449,"line_start":687,"line_end":687,"column_start":9,"column_end":21},"name":"distribution","qualname":"::app::Router::distribution","value":"Distr","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":21868,"byte_end":21875,"line_start":700,"line_end":700,"column_start":12,"column_end":19},"name":"querier","qualname":"<Router<BankT, CustomT, WasmT, StakingT, DistrT>>::querier","value":"fn querier<'a>(&'a Self, &'a dyn Api, &'a dyn Storage, &'a BlockInfo)\n-> RouterQuerier","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":324},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22331,"byte_end":22335,"line_start":718,"line_end":718,"column_start":5,"column_end":9},"name":"Bank","qualname":"::app::SudoMsg::Bank","value":"SudoMsg::Bank(BankSudo)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":326},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22336,"byte_end":22344,"line_start":718,"line_end":718,"column_start":10,"column_end":18},"name":"0","qualname":"::app::SudoMsg::Bank::0","value":"bank::BankSudo","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":327},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22351,"byte_end":22357,"line_start":719,"line_end":719,"column_start":5,"column_end":11},"name":"Custom","qualname":"::app::SudoMsg::Custom","value":"SudoMsg::Custom(Empty)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22358,"byte_end":22363,"line_start":719,"line_end":719,"column_start":12,"column_end":17},"name":"0","qualname":"::app::SudoMsg::Custom::0","value":"cosmwasm_std::Empty","parent":{"krate":0,"index":327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":330},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22370,"byte_end":22377,"line_start":720,"line_end":720,"column_start":5,"column_end":12},"name":"Staking","qualname":"::app::SudoMsg::Staking","value":"SudoMsg::Staking(StakingSudo)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22378,"byte_end":22389,"line_start":720,"line_end":720,"column_start":13,"column_end":24},"name":"0","qualname":"::app::SudoMsg::Staking::0","value":"staking::StakingSudo","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":333},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22396,"byte_end":22400,"line_start":721,"line_end":721,"column_start":5,"column_end":9},"name":"Wasm","qualname":"::app::SudoMsg::Wasm","value":"SudoMsg::Wasm(WasmSudo)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":335},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22401,"byte_end":22409,"line_start":721,"line_end":721,"column_start":10,"column_end":18},"name":"0","qualname":"::app::SudoMsg::Wasm::0","value":"wasm::WasmSudo","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":323},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22317,"byte_end":22324,"line_start":717,"line_end":717,"column_start":10,"column_end":17},"name":"SudoMsg","qualname":"::app::SudoMsg","value":"enum SudoMsg {\n    Bank(BankSudo),\n    Custom(Empty),\n    Staking(StakingSudo),\n    Wasm(WasmSudo),\n}","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":330},{"krate":0,"index":333}],"decl_id":null,"docs":" We use it to allow calling into modules from another module in sudo mode.\n Things like gov proposals belong here.\n","sig":null,"attributes":[{"value":"/ We use it to allow calling into modules from another module in sudo mode.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22187,"byte_end":22264,"line_start":715,"line_end":715,"column_start":1,"column_end":78}},{"value":"/ Things like gov proposals belong here.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22265,"byte_end":22307,"line_start":716,"line_end":716,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22456,"byte_end":22460,"line_start":725,"line_end":725,"column_start":8,"column_end":12},"name":"from","qualname":"<SudoMsg as std::convert::From>::from","value":"fn from(WasmSudo) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22565,"byte_end":22569,"line_start":731,"line_end":731,"column_start":8,"column_end":12},"name":"from","qualname":"<SudoMsg as std::convert::From>::from","value":"fn from(BankSudo) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22677,"byte_end":22681,"line_start":737,"line_end":737,"column_start":8,"column_end":12},"name":"from","qualname":"<SudoMsg as std::convert::From>::from","value":"fn from(StakingSudo) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":342},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22767,"byte_end":22779,"line_start":742,"line_end":742,"column_start":11,"column_end":23},"name":"CosmosRouter","qualname":"::app::CosmosRouter","value":"CosmosRouter","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":343},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22791,"byte_end":22796,"line_start":743,"line_end":743,"column_start":10,"column_end":15},"name":"ExecC","qualname":"::app::CosmosRouter::ExecC","value":"type ExecC;","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":344},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22807,"byte_end":22813,"line_start":744,"line_end":744,"column_start":10,"column_end":16},"name":"QueryC","qualname":"::app::CosmosRouter::QueryC","value":"type QueryC: CustomQuery;","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22836,"byte_end":22843,"line_start":746,"line_end":746,"column_start":8,"column_end":15},"name":"execute","qualname":"::app::CosmosRouter::execute","value":"fn execute<'_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage, &'_ BlockInfo, Addr,\nCosmosMsg<Self::ExecC>) -> AnyResult<AppResponse>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":23045,"byte_end":23050,"line_start":755,"line_end":755,"column_start":8,"column_end":13},"name":"query","qualname":"::app::CosmosRouter::query","value":"fn query<'_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ dyn Storage, &'_ BlockInfo,\nQueryRequest<Self::QueryC>) -> AnyResult<Binary>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":23229,"byte_end":23233,"line_start":763,"line_end":763,"column_start":8,"column_end":12},"name":"sudo","qualname":"::app::CosmosRouter::sudo","value":"fn sudo<'_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage, &'_ BlockInfo, SudoMsg)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":23891,"byte_end":23898,"line_start":786,"line_end":786,"column_start":8,"column_end":15},"name":"execute","qualname":"<Router<BankT, CustomT, WasmT, StakingT, DistrT> as app::CosmosRouter>::execute","value":"fn execute<'_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage, &'_ BlockInfo, Addr,\nCosmosMsg<Self::ExecC>) -> AnyResult<AppResponse>","parent":{"krate":0,"index":342},"children":[],"decl_id":{"krate":0,"index":345},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":24934,"byte_end":24939,"line_start":809,"line_end":809,"column_start":8,"column_end":13},"name":"query","qualname":"<Router<BankT, CustomT, WasmT, StakingT, DistrT> as app::CosmosRouter>::query","value":"fn query<'_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ dyn Storage, &'_ BlockInfo,\nQueryRequest<Self::QueryC>) -> AnyResult<Binary>","parent":{"krate":0,"index":342},"children":[],"decl_id":{"krate":0,"index":346},"docs":" this is used by `RouterQuerier` to actual implement the `Querier` interface.\n you most likely want to use `router.querier(storage, block).wrap()` to get a\n QuerierWrapper to interact with\n","sig":null,"attributes":[{"value":"/ this is used by `RouterQuerier` to actual implement the `Querier` interface.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":24721,"byte_end":24801,"line_start":806,"line_end":806,"column_start":5,"column_end":85}},{"value":"/ you most likely want to use `router.querier(storage, block).wrap()` to get a","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":24806,"byte_end":24886,"line_start":807,"line_end":807,"column_start":5,"column_end":85}},{"value":"/ QuerierWrapper to interact with","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":24891,"byte_end":24926,"line_start":808,"line_end":808,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":25629,"byte_end":25633,"line_start":826,"line_end":826,"column_start":8,"column_end":12},"name":"sudo","qualname":"<Router<BankT, CustomT, WasmT, StakingT, DistrT> as app::CosmosRouter>::sudo","value":"fn sudo<'_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage, &'_ BlockInfo, SudoMsg)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":342},"children":[],"decl_id":{"krate":0,"index":347},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":378},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":27426,"byte_end":27439,"line_start":901,"line_end":901,"column_start":12,"column_end":25},"name":"RouterQuerier","qualname":"::app::RouterQuerier","value":"RouterQuerier {  }","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":27683,"byte_end":27686,"line_start":909,"line_end":909,"column_start":12,"column_end":15},"name":"new","qualname":"<RouterQuerier>::new","value":"fn new(&'a dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'a dyn Api,\n&'a dyn Storage, &'a BlockInfo) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":28208,"byte_end":28217,"line_start":929,"line_end":929,"column_start":8,"column_end":17},"name":"raw_query","qualname":"<RouterQuerier as cosmwasm_std::Querier>::raw_query","value":"fn raw_query<'_, '_>(&'_ Self, &'_ [u8]) -> QuerierResult","parent":{"krate":21,"index":2813},"children":[],"decl_id":{"krate":21,"index":2814},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1460},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93027,"byte_end":93031,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"Mint","qualname":"::bank::BankSudo::Mint","value":"BankSudo::Mint { to_address, amount }","parent":{"krate":0,"index":1459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1461},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93042,"byte_end":93052,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"name":"to_address","qualname":"::bank::BankSudo::Mint::to_address","value":"std::string::String","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1462},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93070,"byte_end":93076,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"amount","qualname":"::bank::BankSudo::Mint::amount","value":"std::vec::Vec<cosmwasm_std::Coin>","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1459},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93012,"byte_end":93020,"line_start":23,"line_end":23,"column_start":10,"column_end":18},"name":"BankSudo","qualname":"::bank::BankSudo","value":"enum BankSudo {\n    Mint {\n            to_address: String,\n            amount: Vec<Coin>,\n        },\n}","parent":null,"children":[{"krate":0,"index":1460}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":477},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93109,"byte_end":93113,"line_start":30,"line_end":30,"column_start":11,"column_end":15},"name":"Bank","qualname":"::bank::Bank","value":"Bank: Module<ExecT = BankMsg, QueryT = BankQuery, SudoT = BankSudo>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1478},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93211,"byte_end":93221,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"BankKeeper","qualname":"::bank::BankKeeper","value":"BankKeeper {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93255,"byte_end":93258,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<BankKeeper>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93388,"byte_end":93400,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"init_balance","qualname":"<BankKeeper>::init_balance","value":"fn init_balance<'_, '_,\n'_>(&'_ Self, &'_ mut dyn Storage, &'_ Addr, Vec<Coin>) -> AnyResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":96040,"byte_end":96047,"line_start":130,"line_end":130,"column_start":8,"column_end":15},"name":"execute","qualname":"<BankKeeper as module::Module>::execute","value":"fn execute<ExecC, QueryC, '_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Addr,\nBankMsg) -> AnyResult<AppResponse>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":97365,"byte_end":97369,"line_start":164,"line_end":164,"column_start":8,"column_end":12},"name":"sudo","qualname":"<BankKeeper as module::Module>::sudo","value":"fn sudo<ExecC, QueryC, '_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, BankSudo)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":960},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":97967,"byte_end":97972,"line_start":182,"line_end":182,"column_start":8,"column_end":13},"name":"query","qualname":"<BankKeeper as module::Module>::query","value":"fn query<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ dyn Storage, &'_ dyn Querier, &'_ BlockInfo,\nBankQuery) -> AnyResult<Binary>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":963},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":577},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":108444,"byte_end":108452,"line_start":15,"line_end":15,"column_start":11,"column_end":19},"name":"Contract","qualname":"::contracts::Contract","value":"Contract<T, Q = Empty>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"decl_id":null,"docs":" Interface to call into a Contract\n","sig":null,"attributes":[{"value":"/ Interface to call into a Contract","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":108396,"byte_end":108433,"line_start":14,"line_end":14,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":108554,"byte_end":108561,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"execute","qualname":"::contracts::Contract::execute","value":"fn execute<'_, '_>(&'_ Self, DepsMut, Env, MessageInfo, Vec<u8>)\n-> AnyResult<Response<T>>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":108712,"byte_end":108723,"line_start":28,"line_end":28,"column_start":8,"column_end":19},"name":"instantiate","qualname":"::contracts::Contract::instantiate","value":"fn instantiate<'_, '_>(&'_ Self, DepsMut, Env, MessageInfo, Vec<u8>)\n-> AnyResult<Response<T>>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":108874,"byte_end":108879,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"query","qualname":"::contracts::Contract::query","value":"fn query<'_, '_>(&'_ Self, Deps, Env, Vec<u8>) -> AnyResult<Binary>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":108956,"byte_end":108960,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"sudo","qualname":"::contracts::Contract::sudo","value":"fn sudo<'_, '_>(&'_ Self, DepsMut, Env, Vec<u8>) -> AnyResult<Response<T>>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":109045,"byte_end":109050,"line_start":40,"line_end":40,"column_start":8,"column_end":13},"name":"reply","qualname":"::contracts::Contract::reply","value":"fn reply<'_, '_>(&'_ Self, DepsMut, Env, Reply) -> AnyResult<Response<T>>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":109133,"byte_end":109140,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"migrate","qualname":"::contracts::Contract::migrate","value":"fn migrate<'_, '_>(&'_ Self, DepsMut, Env, Vec<u8>) -> AnyResult<Response<T>>","parent":{"krate":0,"index":577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":622},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":110202,"byte_end":110217,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"ContractWrapper","qualname":"::contracts::ContractWrapper","value":"ContractWrapper {  }","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"decl_id":null,"docs":" Wraps the exported functions from a contract and provides the normalized format\n Place T4 and E4 at the end, as we just want default placeholders for most contracts that don't have sudo\n","sig":null,"attributes":[{"value":"/ Wraps the exported functions from a contract and provides the normalized format","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":109998,"byte_end":110081,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/ Place T4 and E4 at the end, as we just want default placeholders for most contracts that don't have sudo","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":110082,"byte_end":110190,"line_start":58,"line_end":58,"column_start":1,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":111719,"byte_end":111722,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q>>::new","value":"fn new(ContractFn<T1, C, E1, Q>, ContractFn<T2, C, E2, Q>, QueryFn<T3, E3, Q>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":112311,"byte_end":112325,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"new_with_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q>>::new_with_empty","value":"fn new_with_empty(ContractFn<T1, Empty, E1, Empty>,\nContractFn<T2, Empty, E2, Empty>, QueryFn<T3, E3, Empty>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" this will take a contract that returns Response<Empty> and will \"upgrade\" it\n to Response<C> if needed to be compatible with a chain-specific extension\n","sig":null,"attributes":[{"value":"/ this will take a contract that returns Response<Empty> and will \"upgrade\" it","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":112137,"byte_end":112217,"line_start":122,"line_end":122,"column_start":5,"column_end":85}},{"value":"/ to Response<C> if needed to be compatible with a chain-specific extension","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":112222,"byte_end":112299,"line_start":123,"line_end":123,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":113510,"byte_end":113519,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"with_sudo","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6>>::with_sudo","value":"fn with_sudo<T4A, E4A>(Self, PermissionedFn<T4A, C, E4A, Q>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4A, E4A, E5, T6, E6> where\nT4A: DeserializeOwned + 'static, E4A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":114087,"byte_end":114102,"line_start":175,"line_end":175,"column_start":12,"column_end":27},"name":"with_sudo_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6>>::with_sudo_empty","value":"fn with_sudo_empty<T4A, E4A>(Self, PermissionedFn<T4A, Empty, E4A, Q>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4A, E4A, E5, T6, E6> where\nT4A: DeserializeOwned + 'static, E4A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":114691,"byte_end":114701,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"with_reply","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6>>::with_reply","value":"fn with_reply<E5A>(Self, ReplyFn<C, E5A, Q>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5A, T6, E6> where\nE5A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":115249,"byte_end":115265,"line_start":211,"line_end":211,"column_start":12,"column_end":28},"name":"with_reply_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6>>::with_reply_empty","value":"fn with_reply_empty<E5A>(Self, ReplyFn<Empty, E5A, Q>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5A, T6, E6> where\nE5A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" A correlate of new_with_empty\n","sig":null,"attributes":[{"value":"/ A correlate of new_with_empty","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":115204,"byte_end":115237,"line_start":210,"line_end":210,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":115796,"byte_end":115808,"line_start":228,"line_end":228,"column_start":12,"column_end":24},"name":"with_migrate","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6>>::with_migrate","value":"fn with_migrate<T6A, E6A>(Self, PermissionedFn<T6A, C, E6A, Q>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6A, E6A> where\nT6A: DeserializeOwned + 'static, E6A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":116379,"byte_end":116397,"line_start":246,"line_end":246,"column_start":12,"column_end":30},"name":"with_migrate_empty","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6>>::with_migrate_empty","value":"fn with_migrate_empty<T6A, E6A>(Self, PermissionedFn<T6A, Empty, E6A, Q>)\n-> ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6A, E6A> where\nT6A: DeserializeOwned + 'static, E6A: Display + Debug + Send + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":121032,"byte_end":121039,"line_start":384,"line_end":384,"column_start":8,"column_end":15},"name":"execute","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6> as contracts::Contract>::execute","value":"fn execute<'_, '_>(&'_ Self, DepsMut, Env, MessageInfo, Vec<u8>)\n-> AnyResult<Response<C>>","parent":{"krate":0,"index":577},"children":[],"decl_id":{"krate":0,"index":580},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":121314,"byte_end":121325,"line_start":395,"line_end":395,"column_start":8,"column_end":19},"name":"instantiate","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6> as contracts::Contract>::instantiate","value":"fn instantiate<'_, '_>(&'_ Self, DepsMut, Env, MessageInfo, Vec<u8>)\n-> AnyResult<Response<C>>","parent":{"krate":0,"index":577},"children":[],"decl_id":{"krate":0,"index":581},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":121604,"byte_end":121609,"line_start":406,"line_end":406,"column_start":8,"column_end":13},"name":"query","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6> as contracts::Contract>::query","value":"fn query<'_, '_>(&'_ Self, Deps, Env, Vec<u8>) -> AnyResult<Binary>","parent":{"krate":0,"index":577},"children":[],"decl_id":{"krate":0,"index":582},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":121870,"byte_end":121874,"line_start":412,"line_end":412,"column_start":8,"column_end":12},"name":"sudo","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6> as contracts::Contract>::sudo","value":"fn sudo<'_, '_>(&'_ Self, DepsMut, Env, Vec<u8>) -> AnyResult<Response<C>>","parent":{"krate":0,"index":577},"children":[],"decl_id":{"krate":0,"index":583},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":122252,"byte_end":122257,"line_start":421,"line_end":421,"column_start":8,"column_end":13},"name":"reply","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6> as contracts::Contract>::reply","value":"fn reply<'_, '_>(&'_ Self, DepsMut, Env, Reply) -> AnyResult<Response<C>>","parent":{"krate":0,"index":577},"children":[],"decl_id":{"krate":0,"index":584},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":122616,"byte_end":122623,"line_start":429,"line_end":429,"column_start":8,"column_end":15},"name":"migrate","qualname":"<ContractWrapper<T1, T2, T3, E1, E2, E3, C, Q, T4, E4, E5, T6, E6> as contracts::Contract>::migrate","value":"fn migrate<'_, '_>(&'_ Self, DepsMut, Env, Vec<u8>) -> AnyResult<Response<C>>","parent":{"krate":0,"index":577},"children":[],"decl_id":{"krate":0,"index":585},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":736},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"custom_handler","qualname":"::custom_handler","value":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":1499},{"krate":0,"index":1487},{"krate":0,"index":1491},{"krate":0,"index":1495},{"krate":0,"index":792},{"krate":0,"index":1516},{"krate":0,"index":1504},{"krate":0,"index":1508},{"krate":0,"index":1512},{"krate":0,"index":800},{"krate":0,"index":804}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1499},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123577,"byte_end":123602,"line_start":17,"line_end":17,"column_start":12,"column_end":37},"name":"CachingCustomHandlerState","qualname":"::custom_handler::CachingCustomHandlerState","value":"CachingCustomHandlerState {  }","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1503}],"decl_id":null,"docs":" Internal state of `CachingCustomHandler` wrapping internal mutability so it is not exposed to\n user. Those have to be shared internal state, as after mock is passed to app it is not\n possible to access mock internals which are not exposed by API.\n","sig":null,"attributes":[{"value":"/ Internal state of `CachingCustomHandler` wrapping internal mutability so it is not exposed to","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123219,"byte_end":123316,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ user. Those have to be shared internal state, as after mock is passed to app it is not","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123317,"byte_end":123407,"line_start":13,"line_end":13,"column_start":1,"column_end":91}},{"value":"/ possible to access mock internals which are not exposed by API.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123408,"byte_end":123475,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"derivative(Default(bound = \"\", new = \"true\"), Clone(bound = \"\"))","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123498,"byte_end":123565,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123772,"byte_end":123777,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"execs","qualname":"<CachingCustomHandlerState<ExecC, QueryC>>::execs","value":"fn execs<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123895,"byte_end":123902,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"queries","qualname":"<CachingCustomHandlerState<ExecC, QueryC>>::queries","value":"fn queries<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124023,"byte_end":124028,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"reset","qualname":"<CachingCustomHandlerState<ExecC, QueryC>>::reset","value":"fn reset<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1516},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124401,"byte_end":124421,"line_start":41,"line_end":41,"column_start":12,"column_end":32},"name":"CachingCustomHandler","qualname":"::custom_handler::CachingCustomHandler","value":"CachingCustomHandler {  }","parent":null,"children":[{"krate":0,"index":1519}],"decl_id":null,"docs":" Custom handler storing all the messages it received, so they can be later verified. State is\n thin shared state, so it can be hold after mock is passed to App to read state.\n","sig":null,"attributes":[{"value":"/ Custom handler storing all the messages it received, so they can be later verified. State is","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124131,"byte_end":124227,"line_start":37,"line_end":37,"column_start":1,"column_end":97}},{"value":"/ thin shared state, so it can be hold after mock is passed to App to read state.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124228,"byte_end":124311,"line_start":38,"line_end":38,"column_start":1,"column_end":84}},{"value":"derivative(Default(bound = \"\", new = \"true\"))","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124341,"byte_end":124389,"line_start":40,"line_end":40,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124564,"byte_end":124569,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"state","qualname":"<CachingCustomHandler<ExecC, QueryC>>::state","value":"fn state<'_>(&'_ Self) -> CachingCustomHandlerState<ExecC, QueryC>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124871,"byte_end":124878,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"execute","qualname":"<CachingCustomHandler<Exec, Query> as module::Module>::execute","value":"fn execute<ExecC, QueryC, '_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Addr,\nSelf::ExecT) -> AnyResult<AppResponse>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":125247,"byte_end":125251,"line_start":71,"line_end":71,"column_start":8,"column_end":12},"name":"sudo","qualname":"<CachingCustomHandler<Exec, Query> as module::Module>::sudo","value":"fn sudo<ExecC, QueryC, '_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo,\nSelf::SudoT) -> AnyResult<AppResponse>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":960},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":125560,"byte_end":125565,"line_start":82,"line_end":82,"column_start":8,"column_end":13},"name":"query","qualname":"<CachingCustomHandler<Exec, Query> as module::Module>::query","value":"fn query<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ dyn Storage, &'_ dyn Querier, &'_ BlockInfo,\nSelf::QueryT) -> AnyResult<Binary>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":963},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":817},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":825},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":828}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1540},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126027,"byte_end":126044,"line_start":7,"line_end":7,"column_start":5,"column_end":22},"name":"EmptyAttributeKey","qualname":"::error::Error::EmptyAttributeKey","value":"Error::EmptyAttributeKey { value }","parent":{"krate":0,"index":1520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Empty attribute key. Value: {value}\")","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":125975,"byte_end":126022,"line_start":6,"line_end":6,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1541},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126047,"byte_end":126052,"line_start":7,"line_end":7,"column_start":25,"column_end":30},"name":"value","qualname":"::error::Error::EmptyAttributeKey::value","value":"std::string::String","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1542},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126119,"byte_end":126138,"line_start":10,"line_end":10,"column_start":5,"column_end":24},"name":"EmptyAttributeValue","qualname":"::error::Error::EmptyAttributeValue","value":"Error::EmptyAttributeValue { key }","parent":{"krate":0,"index":1520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Empty attribute value. Key: {key}\")","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126069,"byte_end":126114,"line_start":9,"line_end":9,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1543},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126141,"byte_end":126144,"line_start":10,"line_end":10,"column_start":27,"column_end":30},"name":"key","qualname":"::error::Error::EmptyAttributeValue::key","value":"std::string::String","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1544},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126226,"byte_end":126246,"line_start":13,"line_end":13,"column_start":5,"column_end":25},"name":"ReservedAttributeKey","qualname":"::error::Error::ReservedAttributeKey","value":"Error::ReservedAttributeKey(String)","parent":{"krate":0,"index":1520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Attribute key strats with reserved prefix _: {0}\")","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126161,"byte_end":126221,"line_start":12,"line_end":12,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1546},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126247,"byte_end":126253,"line_start":13,"line_end":13,"column_start":26,"column_end":32},"name":"0","qualname":"::error::Error::ReservedAttributeKey::0","value":"std::string::String","parent":{"krate":0,"index":1544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1547},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126303,"byte_end":126320,"line_start":16,"line_end":16,"column_start":5,"column_end":22},"name":"EventTypeTooShort","qualname":"::error::Error::EventTypeTooShort","value":"Error::EventTypeTooShort(String)","parent":{"krate":0,"index":1520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Event type too short: {0}\")","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126261,"byte_end":126298,"line_start":15,"line_end":15,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1549},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126321,"byte_end":126327,"line_start":16,"line_end":16,"column_start":23,"column_end":29},"name":"0","qualname":"::error::Error::EventTypeTooShort::0","value":"std::string::String","parent":{"krate":0,"index":1547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1550},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126381,"byte_end":126401,"line_start":19,"line_end":19,"column_start":5,"column_end":25},"name":"UnsupportedWasmQuery","qualname":"::error::Error::UnsupportedWasmQuery","value":"Error::UnsupportedWasmQuery(WasmQuery)","parent":{"krate":0,"index":1520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unsupported wasm query: {0:?}\")","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126335,"byte_end":126376,"line_start":18,"line_end":18,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1552},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126402,"byte_end":126411,"line_start":19,"line_end":19,"column_start":26,"column_end":35},"name":"0","qualname":"::error::Error::UnsupportedWasmQuery::0","value":"cosmwasm_std::WasmQuery","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1553},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126467,"byte_end":126485,"line_start":22,"line_end":22,"column_start":5,"column_end":23},"name":"UnsupportedWasmMsg","qualname":"::error::Error::UnsupportedWasmMsg","value":"Error::UnsupportedWasmMsg(WasmMsg)","parent":{"krate":0,"index":1520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unsupported wasm message: {0:?}\")","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126419,"byte_end":126462,"line_start":21,"line_end":21,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1555},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126486,"byte_end":126493,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"name":"0","qualname":"::error::Error::UnsupportedWasmMsg::0","value":"cosmwasm_std::WasmMsg","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1556},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126538,"byte_end":126556,"line_start":25,"line_end":25,"column_start":5,"column_end":23},"name":"UnregisteredCodeId","qualname":"::error::Error::UnregisteredCodeId","value":"Error::UnregisteredCodeId(usize)","parent":{"krate":0,"index":1520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unregistered code id\")","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126501,"byte_end":126533,"line_start":24,"line_end":24,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1558},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126557,"byte_end":126562,"line_start":25,"line_end":25,"column_start":24,"column_end":29},"name":"0","qualname":"::error::Error::UnregisteredCodeId::0","value":"usize","parent":{"krate":0,"index":1556},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1520},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":125963,"byte_end":125968,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    EmptyAttributeKey {\n            value: String,\n        },\n    EmptyAttributeValue {\n            key: String,\n        },\n    ReservedAttributeKey(String),\n    EventTypeTooShort(String),\n    UnsupportedWasmQuery(WasmQuery),\n    UnsupportedWasmMsg(WasmMsg),\n    UnregisteredCodeId(usize),\n}","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1553},{"krate":0,"index":1556}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126592,"byte_end":126611,"line_start":29,"line_end":29,"column_start":12,"column_end":31},"name":"empty_attribute_key","qualname":"<Error>::empty_attribute_key","value":"fn empty_attribute_key<impl Into<String>>(impl Into<String>) -> Self where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126743,"byte_end":126764,"line_start":35,"line_end":35,"column_start":12,"column_end":33},"name":"empty_attribute_value","qualname":"<Error>::empty_attribute_value","value":"fn empty_attribute_value<impl Into<String>>(impl Into<String>) -> Self where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126871,"byte_end":126893,"line_start":39,"line_end":39,"column_start":12,"column_end":34},"name":"reserved_attribute_key","qualname":"<Error>::reserved_attribute_key","value":"fn reserved_attribute_key<impl Into<String>>(impl Into<String>) -> Self where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126993,"byte_end":127013,"line_start":43,"line_end":43,"column_start":12,"column_end":32},"name":"event_type_too_short","qualname":"<Error>::event_type_too_short","value":"fn event_type_too_short<impl Into<String>>(impl Into<String>) -> Self where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1559},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127440,"byte_end":127451,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"AppResponse","qualname":"::executor::AppResponse","value":"AppResponse { events, data }","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1560},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127462,"byte_end":127468,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"events","qualname":"::executor::AppResponse::events","value":"std::vec::Vec<cosmwasm_std::Event>","parent":{"krate":0,"index":1559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1561},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127490,"byte_end":127494,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"data","qualname":"::executor::AppResponse::data","value":"std::option::Option<cosmwasm_std::Binary>","parent":{"krate":0,"index":1559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127722,"byte_end":127734,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"custom_attrs","qualname":"<AppResponse>::custom_attrs","value":"fn custom_attrs<'_>(&'_ Self, usize) -> &'_ [Attribute]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127695,"byte_end":127710,"line_start":21,"line_end":21,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":128083,"byte_end":128092,"line_start":30,"line_end":30,"column_start":12,"column_end":21},"name":"has_event","qualname":"<AppResponse>::has_event","value":"fn has_event<'_, '_>(&'_ Self, &'_ Event) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if there is an Event that is a super-set of this.\n It has the same type, and all compare.attributes are included in it as well.\n You don't need to specify them all.\n","sig":null,"attributes":[{"value":"/ Check if there is an Event that is a super-set of this.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127883,"byte_end":127942,"line_start":27,"line_end":27,"column_start":5,"column_end":64}},{"value":"/ It has the same type, and all compare.attributes are included in it as well.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127947,"byte_end":128027,"line_start":28,"line_end":28,"column_start":5,"column_end":85}},{"value":"/ You don't need to specify them all.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":128032,"byte_end":128071,"line_start":29,"line_end":29,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":128440,"byte_end":128452,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"assert_event","qualname":"<AppResponse>::assert_event","value":"fn assert_event<'_, '_>(&'_ Self, &'_ Event)","parent":null,"children":[],"decl_id":null,"docs":" Like has_event but panics if no match\n","sig":null,"attributes":[{"value":"/ Like has_event but panics if no match","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":128367,"byte_end":128408,"line_start":40,"line_end":40,"column_start":5,"column_end":46}},{"value":"track_caller","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":128413,"byte_end":128428,"line_start":41,"line_end":41,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":128851,"byte_end":128855,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"from","qualname":"<AppResponse as std::convert::From>::from","value":"fn from(SubMsgResponse) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":896},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":129004,"byte_end":129012,"line_start":63,"line_end":63,"column_start":11,"column_end":19},"name":"Executor","qualname":"::executor::Executor","value":"Executor<C>","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":907}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":129284,"byte_end":129291,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"execute","qualname":"::executor::Executor::execute","value":"fn execute<'_>(&'_ mut Self, Addr, CosmosMsg<C>) -> AnyResult<AppResponse>","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" Runs arbitrary CosmosMsg.\n This will create a cache before the execution, so no state changes are persisted if this\n returns an error, but all are persisted on success.\n","sig":null,"attributes":[{"value":"/ Runs arbitrary CosmosMsg.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":129090,"byte_end":129119,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/ This will create a cache before the execution, so no state changes are persisted if this","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":129124,"byte_end":129216,"line_start":68,"line_end":68,"column_start":5,"column_end":97}},{"value":"/ returns an error, but all are persisted on success.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":129221,"byte_end":129276,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":129469,"byte_end":129489,"line_start":74,"line_end":74,"column_start":8,"column_end":28},"name":"instantiate_contract","qualname":"::executor::Executor::instantiate_contract","value":"fn instantiate_contract<T, U, '_, '_,\n'_>(&'_ mut Self, u64, Addr, &'_ T, &'_ [Coin], U, Option<String>)\n-> AnyResult<Addr> where T: Serialize, U: Into<String>","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" Create a contract and get the new address.\n This is just a helper around execute()\n","sig":null,"attributes":[{"value":"/ Create a contract and get the new address.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":129368,"byte_end":129414,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/ This is just a helper around execute()","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":129419,"byte_end":129461,"line_start":73,"line_end":73,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":130411,"byte_end":130427,"line_start":100,"line_end":100,"column_start":8,"column_end":24},"name":"execute_contract","qualname":"::executor::Executor::execute_contract","value":"fn execute_contract<T, '_, '_,\n'_>(&'_ mut Self, Addr, Addr, &'_ T, &'_ [Coin]) -> AnyResult<AppResponse>\nwhere T: Serialize + std::fmt::Debug","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" Execute a contract and process all returned messages.\n This is just a helper around execute(),\n but we parse out the data field to that what is returned by the contract (not the protobuf wrapper)\n","sig":null,"attributes":[{"value":"/ Execute a contract and process all returned messages.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":130190,"byte_end":130247,"line_start":97,"line_end":97,"column_start":5,"column_end":62}},{"value":"/ This is just a helper around execute(),","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":130252,"byte_end":130295,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/ but we parse out the data field to that what is returned by the contract (not the protobuf wrapper)","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":130300,"byte_end":130403,"line_start":99,"line_end":99,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":131162,"byte_end":131178,"line_start":122,"line_end":122,"column_start":8,"column_end":24},"name":"migrate_contract","qualname":"::executor::Executor::migrate_contract","value":"fn migrate_contract<T, '_, '_>(&'_ mut Self, Addr, Addr, &'_ T, u64)\n-> AnyResult<AppResponse> where T: Serialize","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":" Migrate a contract. Sender must be registered admin.\n This is just a helper around execute()\n","sig":null,"attributes":[{"value":"/ Migrate a contract. Sender must be registered admin.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":131051,"byte_end":131107,"line_start":120,"line_end":120,"column_start":5,"column_end":61}},{"value":"/ This is just a helper around execute()","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":131112,"byte_end":131154,"line_start":121,"line_end":121,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":131570,"byte_end":131581,"line_start":138,"line_end":138,"column_start":8,"column_end":19},"name":"send_tokens","qualname":"::executor::Executor::send_tokens","value":"fn send_tokens<'_, '_>(&'_ mut Self, Addr, Addr, &'_ [Coin])\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":896},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":953},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132165,"byte_end":132171,"line_start":11,"line_end":11,"column_start":11,"column_end":17},"name":"Module","qualname":"::module::Module","value":"Module","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":954},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132183,"byte_end":132188,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"ExecT","qualname":"::module::Module::ExecT","value":"type ExecT;","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":955},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132199,"byte_end":132205,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"QueryT","qualname":"::module::Module::QueryT","value":"type QueryT;","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":956},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132216,"byte_end":132221,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"SudoT","qualname":"::module::Module::SudoT","value":"type SudoT;","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132339,"byte_end":132346,"line_start":18,"line_end":18,"column_start":8,"column_end":15},"name":"execute","qualname":"::module::Module::execute","value":"fn execute<ExecC, QueryC, '_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Addr,\nSelf::ExecT) -> AnyResult<AppResponse> where ExecC: std::fmt::Debug + Clone +\nPartialEq + JsonSchema + DeserializeOwned + 'static, QueryC: CustomQuery +\nDeserializeOwned + 'static","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":" execute runs any ExecT message, which can be called by any external actor\n or smart contract\n","sig":null,"attributes":[{"value":"/ execute runs any ExecT message, which can be called by any external actor","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132228,"byte_end":132305,"line_start":16,"line_end":16,"column_start":5,"column_end":82}},{"value":"/ or smart contract","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132310,"byte_end":132331,"line_start":17,"line_end":17,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133084,"byte_end":133088,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"sudo","qualname":"::module::Module::sudo","value":"fn sudo<ExecC, QueryC, '_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo,\nSelf::SudoT) -> AnyResult<AppResponse> where ExecC: std::fmt::Debug + Clone +\nPartialEq + JsonSchema + DeserializeOwned + 'static, QueryC: CustomQuery +\nDeserializeOwned + 'static","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":" sudo runs privileged actions, like minting tokens, or governance proposals.\n This allows modules to have full access to these privileged actions,\n that cannot be triggered by smart contracts.","sig":null,"attributes":[{"value":"/ sudo runs privileged actions, like minting tokens, or governance proposals.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132777,"byte_end":132856,"line_start":31,"line_end":31,"column_start":5,"column_end":84}},{"value":"/ This allows modules to have full access to these privileged actions,","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132861,"byte_end":132933,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ that cannot be triggered by smart contracts.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132938,"byte_end":132986,"line_start":33,"line_end":33,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132991,"byte_end":132994,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ There is no sender, as this must be previously authorized before the call","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":132999,"byte_end":133076,"line_start":35,"line_end":35,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133500,"byte_end":133505,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"query","qualname":"::module::Module::query","value":"fn query<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ dyn Storage, &'_ dyn Querier, &'_ BlockInfo,\nSelf::QueryT) -> AnyResult<Binary>","parent":{"krate":0,"index":953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":964},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133707,"byte_end":133720,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"FailingModule","qualname":"::module::FailingModule","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133852,"byte_end":133855,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<FailingModule<Exec, Query, Sudo>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133990,"byte_end":133997,"line_start":67,"line_end":67,"column_start":8,"column_end":15},"name":"default","qualname":"<FailingModule<Exec, Query, Sudo> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":134276,"byte_end":134283,"line_start":82,"line_end":82,"column_start":8,"column_end":15},"name":"execute","qualname":"<FailingModule<Exec, Query, Sudo> as module::Module>::execute","value":"fn execute<ExecC, QueryC, '_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Addr,\nSelf::ExecT) -> AnyResult<AppResponse>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":134632,"byte_end":134636,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"sudo","qualname":"<FailingModule<Exec, Query, Sudo> as module::Module>::sudo","value":"fn sudo<ExecC, QueryC, '_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo,\nSelf::SudoT) -> AnyResult<AppResponse>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":960},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":134945,"byte_end":134950,"line_start":105,"line_end":105,"column_start":8,"column_end":13},"name":"query","qualname":"<FailingModule<Exec, Query, Sudo> as module::Module>::query","value":"fn query<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ dyn Storage, &'_ dyn Querier, &'_ BlockInfo,\nSelf::QueryT) -> AnyResult<Binary>","parent":{"krate":0,"index":953},"children":[],"decl_id":{"krate":0,"index":963},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1569},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135536,"byte_end":135541,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Slash","qualname":"::staking::StakingSudo::Slash","value":"StakingSudo::Slash { validator, percentage }","parent":{"krate":0,"index":1568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1570},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135552,"byte_end":135561,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"name":"validator","qualname":"::staking::StakingSudo::Slash::validator","value":"std::string::String","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1571},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135579,"byte_end":135589,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"percentage","qualname":"::staking::StakingSudo::Slash::percentage","value":"cosmwasm_std::Decimal","parent":{"krate":0,"index":1569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1568},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135518,"byte_end":135529,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"StakingSudo","qualname":"::staking::StakingSudo","value":"enum StakingSudo {\n    Slash {\n            validator: String,\n            percentage: Decimal,\n        },\n}","parent":null,"children":[{"krate":0,"index":1569}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1020},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135620,"byte_end":135627,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"name":"Staking","qualname":"::staking::Staking","value":"Staking: Module<ExecT = StakingMsg, QueryT = StakingQuery, SudoT = StakingSudo>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1021},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135713,"byte_end":135727,"line_start":18,"line_end":18,"column_start":10,"column_end":24},"name":"FailingStaking","qualname":"::staking::FailingStaking","value":"FailingModule<StakingMsg, StakingQuery, StakingSudo>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1023},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135831,"byte_end":135843,"line_start":22,"line_end":22,"column_start":11,"column_end":23},"name":"Distribution","qualname":"::staking::Distribution","value":"Distribution: Module<ExecT = DistributionMsg, QueryT = Empty, SudoT = Empty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1024},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135921,"byte_end":135940,"line_start":24,"line_end":24,"column_start":10,"column_end":29},"name":"FailingDistribution","qualname":"::staking::FailingDistribution","value":"FailingModule<DistributionMsg, Empty, Empty>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1587},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":156746,"byte_end":156754,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"WasmSudo","qualname":"::wasm::WasmSudo","value":"WasmSudo { contract_addr, msg }","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1588},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":156765,"byte_end":156778,"line_start":36,"line_end":36,"column_start":9,"column_end":22},"name":"contract_addr","qualname":"::wasm::WasmSudo::contract_addr","value":"cosmwasm_std::Addr","parent":{"krate":0,"index":1587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1589},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":156794,"byte_end":156797,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"msg","qualname":"::wasm::WasmSudo::msg","value":"cosmwasm_std::Binary","parent":{"krate":0,"index":1587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":156837,"byte_end":156840,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<WasmSudo>::new","value":"fn new<T, '_, '_>(&'_ Addr, &'_ T) -> StdResult<WasmSudo> where T: Serialize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1605},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157231,"byte_end":157243,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"ContractData","qualname":"::wasm::ContractData","value":"ContractData { code_id, creator, admin, label, created }","parent":null,"children":[{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610}],"decl_id":null,"docs":" Contract Data includes information about contract, equivalent of `ContractInfo` in wasmd\n interface.\n","sig":null,"attributes":[{"value":"/ Contract Data includes information about contract, equivalent of `ContractInfo` in wasmd","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157037,"byte_end":157129,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/ interface.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157130,"byte_end":157144,"line_start":50,"line_end":50,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1606},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157297,"byte_end":157304,"line_start":54,"line_end":54,"column_start":9,"column_end":16},"name":"code_id","qualname":"::wasm::ContractData::code_id","value":"usize","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Identifier of stored contract code\n","sig":null,"attributes":[{"value":"/ Identifier of stored contract code","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157250,"byte_end":157288,"line_start":53,"line_end":53,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1607},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157388,"byte_end":157395,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"creator","qualname":"::wasm::ContractData::creator","value":"cosmwasm_std::Addr","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Address of account who initially instantiated the contract\n","sig":null,"attributes":[{"value":"/ Address of account who initially instantiated the contract","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157317,"byte_end":157379,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1608},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157474,"byte_end":157479,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"name":"admin","qualname":"::wasm::ContractData::admin","value":"std::option::Option<cosmwasm_std::Addr>","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Optional address of account who can execute migrations\n","sig":null,"attributes":[{"value":"/ Optional address of account who can execute migrations","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157407,"byte_end":157465,"line_start":57,"line_end":57,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157556,"byte_end":157561,"line_start":60,"line_end":60,"column_start":9,"column_end":14},"name":"label","qualname":"::wasm::ContractData::label","value":"std::string::String","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Metadata passed while contract instantiation\n","sig":null,"attributes":[{"value":"/ Metadata passed while contract instantiation","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157499,"byte_end":157547,"line_start":59,"line_end":59,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1610},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157649,"byte_end":157656,"line_start":62,"line_end":62,"column_start":9,"column_end":16},"name":"created","qualname":"::wasm::ContractData::created","value":"u64","parent":{"krate":0,"index":1605},"children":[],"decl_id":null,"docs":" Blockchain height in the moment of instantiating the contract\n","sig":null,"attributes":[{"value":"/ Blockchain height in the moment of instantiating the contract","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157575,"byte_end":157640,"line_start":61,"line_end":61,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":1298},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157676,"byte_end":157680,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"name":"Wasm","qualname":"::wasm::Wasm","value":"Wasm<ExecC, QueryC>","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157744,"byte_end":157749,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"query","qualname":"::wasm::Wasm::query","value":"fn query<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ dyn Storage, &'_ dyn Querier, &'_ BlockInfo,\nWasmQuery) -> AnyResult<Binary>","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":" Handles all WasmQuery requests\n","sig":null,"attributes":[{"value":"/ Handles all WasmQuery requests","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157702,"byte_end":157736,"line_start":66,"line_end":66,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157979,"byte_end":157986,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"execute","qualname":"::wasm::Wasm::execute","value":"fn execute<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Addr,\nWasmMsg) -> AnyResult<AppResponse>","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":" Handles all WasmMsg messages\n","sig":null,"attributes":[{"value":"/ Handles all WasmMsg messages","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":157939,"byte_end":157971,"line_start":76,"line_end":76,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":158296,"byte_end":158300,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"sudo","qualname":"::wasm::Wasm::sudo","value":"fn sudo<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, Addr, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Binary)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":" Admin interface, cannot be called via CosmosMsg\n","sig":null,"attributes":[{"value":"/ Admin interface, cannot be called via CosmosMsg","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":158237,"byte_end":158288,"line_start":87,"line_end":87,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1304},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":158566,"byte_end":158576,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"WasmKeeper","qualname":"::wasm::WasmKeeper","value":"WasmKeeper {  }","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":158981,"byte_end":158988,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"default","qualname":"<WasmKeeper<ExecC, QueryC> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":159340,"byte_end":159345,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"query","qualname":"<WasmKeeper<ExecC, QueryC> as wasm::Wasm>::query","value":"fn query<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ dyn Storage, &'_ dyn Querier, &'_ BlockInfo,\nWasmQuery) -> AnyResult<Binary>","parent":{"krate":0,"index":1298},"children":[],"decl_id":{"krate":0,"index":1301},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":160464,"byte_end":160471,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"execute","qualname":"<WasmKeeper<ExecC, QueryC> as wasm::Wasm>::execute","value":"fn execute<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Addr,\nWasmMsg) -> AnyResult<AppResponse>","parent":{"krate":0,"index":1298},"children":[],"decl_id":{"krate":0,"index":1302},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":160951,"byte_end":160955,"line_start":165,"line_end":165,"column_start":8,"column_end":12},"name":"sudo","qualname":"<WasmKeeper<ExecC, QueryC> as wasm::Wasm>::sudo","value":"fn sudo<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, Addr, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Binary)\n-> AnyResult<AppResponse>","parent":{"krate":0,"index":1298},"children":[],"decl_id":{"krate":0,"index":1303},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":161616,"byte_end":161626,"line_start":183,"line_end":183,"column_start":12,"column_end":22},"name":"store_code","qualname":"<WasmKeeper<ExecC, QueryC>>::store_code","value":"fn store_code<'_>(&'_ mut Self, Box<dyn Contract<ExecC, QueryC>>) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":161797,"byte_end":161810,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"load_contract","qualname":"<WasmKeeper<ExecC, QueryC>>::load_contract","value":"fn load_contract<'_, '_, '_>(&'_ Self, &'_ dyn Storage, &'_ Addr)\n-> AnyResult<ContractData>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":162023,"byte_end":162036,"line_start":195,"line_end":195,"column_start":12,"column_end":25},"name":"dump_wasm_raw","qualname":"<WasmKeeper<ExecC, QueryC>>::dump_wasm_raw","value":"fn dump_wasm_raw<'_, '_, '_>(&'_ Self, &'_ dyn Storage, &'_ Addr)\n-> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":164634,"byte_end":164637,"line_start":275,"line_end":275,"column_start":12,"column_end":15},"name":"new","qualname":"<WasmKeeper<ExecC, QueryC>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":164692,"byte_end":164703,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"query_smart","qualname":"<WasmKeeper<ExecC, QueryC>>::query_smart","value":"fn query_smart<'_, '_, '_, '_,\n'_>(&'_ Self, Addr, &'_ dyn Api, &'_ dyn Storage, &'_ dyn Querier,\n&'_ BlockInfo, Vec<u8>) -> AnyResult<Binary>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":165133,"byte_end":165142,"line_start":298,"line_end":298,"column_start":12,"column_end":21},"name":"query_raw","qualname":"<WasmKeeper<ExecC, QueryC>>::query_raw","value":"fn query_raw<'_, '_, '_>(&'_ Self, Addr, &'_ dyn Storage, &'_ [u8]) -> Binary","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":177299,"byte_end":177316,"line_start":640,"line_end":640,"column_start":12,"column_end":29},"name":"register_contract","qualname":"<WasmKeeper<ExecC, QueryC>>::register_contract","value":"fn register_contract<'_, '_,\nimpl Into<Option<Addr>>>(&'_ Self, &'_ mut dyn Storage, usize, Addr,\nimpl Into<Option<Addr>>, String, u64) -> AnyResult<Addr> where\nimpl Into<Option<Addr>>: Into<Option<Addr>>","parent":null,"children":[],"decl_id":null,"docs":" This just creates an address and empty storage instance, returning the new address\n You must call init after this to set up the contract properly.\n These are separated into two steps to have cleaner return values.\n","sig":null,"attributes":[{"value":"/ This just creates an address and empty storage instance, returning the new address","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":177056,"byte_end":177142,"line_start":637,"line_end":637,"column_start":5,"column_end":91}},{"value":"/ You must call init after this to set up the contract properly.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":177147,"byte_end":177213,"line_start":638,"line_end":638,"column_start":5,"column_end":71}},{"value":"/ These are separated into two steps to have cleaner return values.","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":177218,"byte_end":177287,"line_start":639,"line_end":639,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":177982,"byte_end":177994,"line_start":666,"line_end":666,"column_start":12,"column_end":24},"name":"call_execute","qualname":"<WasmKeeper<ExecC, QueryC>>::call_execute","value":"fn call_execute<'_, '_, '_, '_,\n'_>(&'_ Self, &'_ dyn Api, &'_ mut dyn Storage, Addr,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo,\nMessageInfo, Vec<u8>) -> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":178524,"byte_end":178540,"line_start":686,"line_end":686,"column_start":12,"column_end":28},"name":"call_instantiate","qualname":"<WasmKeeper<ExecC, QueryC>>::call_instantiate","value":"fn call_instantiate<'_, '_, '_, '_,\n'_>(&'_ Self, Addr, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo,\nMessageInfo, Vec<u8>) -> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":179074,"byte_end":179084,"line_start":706,"line_end":706,"column_start":12,"column_end":22},"name":"call_reply","qualname":"<WasmKeeper<ExecC, QueryC>>::call_reply","value":"fn call_reply<'_, '_, '_, '_,\n'_>(&'_ Self, Addr, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Reply)\n-> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":179581,"byte_end":179590,"line_start":725,"line_end":725,"column_start":12,"column_end":21},"name":"call_sudo","qualname":"<WasmKeeper<ExecC, QueryC>>::call_sudo","value":"fn call_sudo<'_, '_, '_, '_,\n'_>(&'_ Self, Addr, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Vec<u8>)\n-> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":180084,"byte_end":180096,"line_start":744,"line_end":744,"column_start":12,"column_end":24},"name":"call_migrate","qualname":"<WasmKeeper<ExecC, QueryC>>::call_migrate","value":"fn call_migrate<'_, '_, '_, '_,\n'_>(&'_ Self, Addr, &'_ dyn Api, &'_ mut dyn Storage,\n&'_ dyn CosmosRouter<ExecC = ExecC, QueryC = QueryC>, &'_ BlockInfo, Vec<u8>)\n-> AnyResult<Response<ExecC>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":183194,"byte_end":183207,"line_start":838,"line_end":838,"column_start":12,"column_end":25},"name":"save_contract","qualname":"<WasmKeeper<ExecC, QueryC>>::save_contract","value":"fn save_contract<'_, '_, '_,\n'_>(&'_ Self, &'_ mut dyn Storage, &'_ Addr, &'_ ContractData)\n-> AnyResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3154,"byte_end":3162,"line_start":63,"line_end":63,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3233,"byte_end":3241,"line_start":69,"line_end":69,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":4526,"byte_end":4529,"line_start":111,"line_end":111,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":5210,"byte_end":5213,"line_start":131,"line_end":131,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":6603,"byte_end":6613,"line_start":179,"line_end":179,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":6877,"byte_end":6887,"line_start":195,"line_end":195,"column_start":5,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":7598,"byte_end":7608,"line_start":221,"line_end":221,"column_start":5,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8536,"byte_end":8546,"line_start":251,"line_end":251,"column_start":5,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":15260,"byte_end":15263,"line_start":508,"line_end":508,"column_start":5,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":16248,"byte_end":16251,"line_start":540,"line_end":540,"column_start":5,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":17572,"byte_end":17575,"line_start":577,"line_end":577,"column_start":5,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":21507,"byte_end":21513,"line_start":690,"line_end":690,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22439,"byte_end":22446,"line_start":724,"line_end":724,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22548,"byte_end":22555,"line_start":730,"line_end":730,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22660,"byte_end":22667,"line_start":736,"line_end":736,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":23460,"byte_end":23466,"line_start":773,"line_end":773,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":26295,"byte_end":26305,"line_start":847,"line_end":847,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":26398,"byte_end":26408,"line_start":853,"line_end":853,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":26574,"byte_end":26584,"line_start":862,"line_end":862,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":27637,"byte_end":27650,"line_start":908,"line_end":908,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":28021,"byte_end":28034,"line_start":924,"line_end":924,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93231,"byte_end":93241,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":95906,"byte_end":95916,"line_start":123,"line_end":123,"column_start":15,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":95937,"byte_end":95947,"line_start":125,"line_end":125,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":111280,"byte_end":111295,"line_start":96,"line_end":96,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":112832,"byte_end":112847,"line_start":141,"line_end":141,"column_start":5,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":120364,"byte_end":120379,"line_start":368,"line_end":368,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123718,"byte_end":123743,"line_start":22,"line_end":22,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124515,"byte_end":124535,"line_start":45,"line_end":45,"column_start":21,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124688,"byte_end":124708,"line_start":51,"line_end":51,"column_start":30,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":813},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126573,"byte_end":126578,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127520,"byte_end":127531,"line_start":18,"line_end":18,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":128830,"byte_end":128841,"line_start":54,"line_end":54,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133806,"byte_end":133819,"line_start":60,"line_end":60,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133948,"byte_end":133961,"line_start":66,"line_end":66,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":134074,"byte_end":134087,"line_start":72,"line_end":72,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135802,"byte_end":135816,"line_start":20,"line_end":20,"column_start":18,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":136012,"byte_end":136031,"line_start":26,"line_end":26,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":137806,"byte_end":137824,"line_start":41,"line_end":41,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":138176,"byte_end":138194,"line_start":56,"line_end":56,"column_start":22,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":140395,"byte_end":140401,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":141112,"byte_end":141114,"line_start":151,"line_end":151,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":142209,"byte_end":142221,"line_start":191,"line_end":191,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":143583,"byte_end":143595,"line_start":234,"line_end":234,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":156815,"byte_end":156823,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":158946,"byte_end":158956,"line_start":107,"line_end":107,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":159160,"byte_end":159170,"line_start":116,"line_end":116,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":161577,"byte_end":161587,"line_start":182,"line_end":182,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":164450,"byte_end":164460,"line_start":270,"line_end":270,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":552,"byte_end":566,"line_start":13,"line_end":13,"column_start":9,"column_end":23},"ref_id":{"krate":0,"index":736}},{"kind":"Mod","span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/lib.rs","byte_start":576,"byte_end":581,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":817}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3154,"byte_end":3162,"line_start":63,"line_end":63,"column_start":18,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":154},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":3233,"byte_end":3241,"line_start":69,"line_end":69,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":4526,"byte_end":4529,"line_start":111,"line_end":111,"column_start":9,"column_end":12},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":157},"to":{"krate":21,"index":2813}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":5210,"byte_end":5213,"line_start":131,"line_end":131,"column_start":9,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":157},"to":{"krate":0,"index":896}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":6603,"byte_end":6613,"line_start":179,"line_end":179,"column_start":9,"column_end":19},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":205},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":6877,"byte_end":6887,"line_start":195,"line_end":195,"column_start":5,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":7598,"byte_end":7608,"line_start":221,"line_end":221,"column_start":5,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":8536,"byte_end":8546,"line_start":251,"line_end":251,"column_start":5,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":15260,"byte_end":15263,"line_start":508,"line_end":508,"column_start":5,"column_end":8},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":16248,"byte_end":16251,"line_start":540,"line_end":540,"column_start":5,"column_end":8},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":17572,"byte_end":17575,"line_start":577,"line_end":577,"column_start":5,"column_end":8},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":21507,"byte_end":21513,"line_start":690,"line_end":690,"column_start":47,"column_end":53},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22439,"byte_end":22446,"line_start":724,"line_end":724,"column_start":25,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":323},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22548,"byte_end":22555,"line_start":730,"line_end":730,"column_start":25,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":323},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":22660,"byte_end":22667,"line_start":736,"line_end":736,"column_start":28,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":323},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":23460,"byte_end":23466,"line_start":773,"line_end":773,"column_start":9,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":304},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":26295,"byte_end":26305,"line_start":847,"line_end":847,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":359},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":26398,"byte_end":26408,"line_start":853,"line_end":853,"column_start":21,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":26574,"byte_end":26584,"line_start":862,"line_end":862,"column_start":38,"column_end":48},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":359},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":27637,"byte_end":27650,"line_start":908,"line_end":908,"column_start":25,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/app.rs","byte_start":28021,"byte_end":28034,"line_start":924,"line_end":924,"column_start":37,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":378},"to":{"krate":21,"index":2813}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93115,"byte_end":93121,"line_start":30,"line_end":30,"column_start":17,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":953},"to":{"krate":0,"index":477}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":93231,"byte_end":93241,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":95906,"byte_end":95916,"line_start":123,"line_end":123,"column_start":15,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":477}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/bank.rs","byte_start":95937,"byte_end":95947,"line_start":125,"line_end":125,"column_start":17,"column_end":27},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1478},"to":{"krate":0,"index":953}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":111280,"byte_end":111295,"line_start":96,"line_end":96,"column_start":36,"column_end":51},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":112832,"byte_end":112847,"line_start":141,"line_end":141,"column_start":5,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/contracts.rs","byte_start":120364,"byte_end":120379,"line_start":368,"line_end":368,"column_start":9,"column_end":24},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":622},"to":{"krate":0,"index":577}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":123718,"byte_end":123743,"line_start":22,"line_end":22,"column_start":21,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124515,"byte_end":124535,"line_start":45,"line_end":45,"column_start":21,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/custom_handler.rs","byte_start":124688,"byte_end":124708,"line_start":51,"line_end":51,"column_start":30,"column_end":50},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1516},"to":{"krate":0,"index":953}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/error.rs","byte_start":126573,"byte_end":126578,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":127520,"byte_end":127531,"line_start":18,"line_end":18,"column_start":6,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/executor.rs","byte_start":128830,"byte_end":128841,"line_start":54,"line_end":54,"column_start":31,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1559},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133806,"byte_end":133819,"line_start":60,"line_end":60,"column_start":25,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":133948,"byte_end":133961,"line_start":66,"line_end":66,"column_start":37,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":964},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/module.rs","byte_start":134074,"byte_end":134087,"line_start":72,"line_end":72,"column_start":36,"column_end":49},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":964},"to":{"krate":0,"index":953}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135629,"byte_end":135635,"line_start":16,"line_end":16,"column_start":20,"column_end":26},"kind":"SuperTrait","from":{"krate":0,"index":953},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135802,"byte_end":135816,"line_start":20,"line_end":20,"column_start":18,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1021},"to":{"krate":0,"index":1020}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":135845,"byte_end":135851,"line_start":22,"line_end":22,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":953},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/staking.rs","byte_start":136012,"byte_end":136031,"line_start":26,"line_end":26,"column_start":23,"column_end":42},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1024},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":137806,"byte_end":137824,"line_start":41,"line_end":41,"column_start":10,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":138176,"byte_end":138194,"line_start":56,"line_end":56,"column_start":22,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1065},"to":{"krate":21,"index":2797}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":140395,"byte_end":140401,"line_start":120,"line_end":120,"column_start":6,"column_end":12},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":141112,"byte_end":141114,"line_start":151,"line_end":151,"column_start":6,"column_end":8},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":142209,"byte_end":142221,"line_start":191,"line_end":191,"column_start":16,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/transactions.rs","byte_start":143583,"byte_end":143595,"line_start":234,"line_end":234,"column_start":29,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1100},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":156815,"byte_end":156823,"line_start":40,"line_end":40,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":158946,"byte_end":158956,"line_start":107,"line_end":107,"column_start":33,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1304},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":159160,"byte_end":159170,"line_start":116,"line_end":116,"column_start":45,"column_end":55},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1304},"to":{"krate":0,"index":1298}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":161577,"byte_end":161587,"line_start":182,"line_end":182,"column_start":21,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/turtle/.cargo/registry/src/github.com-1ecc6299db9ec823/cw-multi-test-0.15.1/src/wasm.rs","byte_start":164450,"byte_end":164460,"line_start":270,"line_end":270,"column_start":21,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1304},"to":{"krate":4294967295,"index":4294967295}}]}